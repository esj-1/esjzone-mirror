name: 同步小説網頁

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

jobs:
  sync-esjzone:
    name: 同步 ESJZone
    runs-on: macos-latest

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: ${{ secrets.PRIVATE_REPO_BRANCH }}
          token: ${{ secrets.PA_TOKEN }}

      - name: ✅ Use PyPy3 ✅
        uses: actions/setup-python@v2
        with:
          python-version: 'pypy-3.7'

      - name: 💾 Cache Python requirements 💾
        id: cache
        uses: actions/cache@v2
        with:
          key: venv-cache-${{ hashFiles('**/requirements.txt') }}
          path: venv
          restore-keys: venv-cache-

      - name: 📥 Install dependencies 📥
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          python -m venv venv
          venv/bin/pip install -q -r requirements.txt

      # Get list from backup server, generate fake fetch message & delay
      - name: 🔄 Sync ESJZone 🔄
        run: venv/bin/python main.py

      - name: 📤 Upload novel directory 📤
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: novel-dir
          path: docs/forum/

  build-assets:
    name: 構建 assets
    runs-on: macos-latest
    needs: sync-esjzone

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: ${{ secrets.PRIVATE_REPO_BRANCH }}
          token: ${{ secrets.PA_TOKEN }}

      - name: 📥 Download novel directory 📥
        uses: actions/download-artifact@v2
        with:
          name: novel-dir
          path: docs/forum/

      - name: ✅ Use Node.js ✅
        id: client_cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 💾 Cache yarn dependencies 💾
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: 📥 Install yarn dependencies 📥
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: |
          npx browserslist@latest --update-db
          yarn install

      - name: 🛠 Patch files 🛠
        run: |
          chmod +x docs/.vuepress/scripts/build.sh
          docs/.vuepress/scripts/build.sh

      - name: ⚙ Build ⚙
        run: yarn docs:build_client

      - name: 📤 Upload assets 📤
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: assets
          path: docs/.vuepress/dist/assets

  build-server:
    name: 構建 server.json
    runs-on: macos-latest
    needs: sync-esjzone

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: ${{ secrets.PRIVATE_REPO_BRANCH }}
          token: ${{ secrets.PA_TOKEN }}

      - name: 📥 Download novel directory 📥
        uses: actions/download-artifact@v2
        with:
          name: novel-dir
          path: docs/forum/

      - name: ✅ Use Node.js ✅
        id: server_cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: 📥 Install yarn dependencies 📥
        uses: bahmutov/npm-install@HEAD
        with:
          install-command: |
            npx browserslist@latest --update-db
            yarn install

      - name: 🛠 Patch files 🛠
        run: |
          chmod +x docs/.vuepress/scripts/build.sh
          docs/.vuepress/scripts/build.sh

      - name: ⚙ Build ⚙
        run: yarn docs:build_server

      - name: 📤 Upload dist folder 📤
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: server-dist
          path: docs/.vuepress/dist

  render-and-deploy:
    name: 轉換頁面並部署
    runs-on: macos-latest
    needs: [build-assets, build-server]

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: ${{ secrets.PRIVATE_REPO_BRANCH }}
          token: ${{ secrets.PA_TOKEN }}

      - name: ✅ Use Node.js ✅
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: 📥 Install yarn dependencies 📥
        uses: bahmutov/npm-install@HEAD
        with:
          install-command: |
            npx browserslist@latest --update-db
            yarn install

      - name: 📥 Download server dist folder 📥
        uses: actions/download-artifact@v2
        with:
          name: server-dist
          path: docs/.vuepress/dist

      - name: 📥 Download assets 📥
        uses: actions/download-artifact@v2
        with:
          name: assets
          path: docs/.vuepress/dist/assets

      - name: 🛠 Patch files 🛠
        run: |
          chmod +x docs/.vuepress/scripts/build.sh
          docs/.vuepress/scripts/build.sh

      - name: ⚙ Render ⚙
        run: yarn docs:render_pages

      # Push downloaded files to production
      - name: 🚀 Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs/.vuepress/dist
          token: ${{ secrets.PA_TOKEN }}
          repository-name: ${{ secrets.PRIVATE_REPO_DOCS_BRANCH }}
          silent: true

#  sync-and-build:
#    runs-on: macos-latest
#
#    steps:
#      - name: 📥 Checkout Actions 📥
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ secrets.PRIVATE_REPO }}
#          ref: ${{ secrets.PRIVATE_REPO_BRANCH }}
#          token: ${{ secrets.PA_TOKEN }}
#
#      - name: ✅ Use PyPy3 ✅
#        uses: actions/setup-python@v2
#        with:
#          python-version: 'pypy-3.7'
#
#      - name: 💾 Cache Python requirements 💾
#        uses: actions/cache@v2
#        with:
#          key: pip-cache-${{ hashFiles('requirements/*.txt') }}
#          path: ~/.cache/pip
#          restore-keys: pip-cache-${{ hashFiles('requirements/*.txt') }}
#
#      - name: 📥 Install Python dependencies 📥
#        run: pip install -q -r requirements.txt
#
#      # Get list from backup server, generate fake fetch message & delay
#      - name: 🔄 Sync ESJZone 🔄
#        run: python main.py
#
#      - name: ✅ Use Node.js ✅
#        uses: actions/setup-node@v2
#        with:
#          node-version: '14.x'
#          cache: 'yarn'
#
#      - name: 📥 Install npm dependencies 📥
#        run: yarn install
#
#      - name: 🛠 Patch files 🛠
#        run: |
#          chmod +x docs/.vuepress/scripts/build.sh
#          docs/.vuepress/scripts/build.sh
#
#      # Request update check from private server, sync logs and download files
#      - name: ⚙ Build ⚙
#        id: build_status
#        continue-on-error: true
#        run: yarn docs:build
#
#      # Push downloaded files to production
#      - name: 🚀 Deploy 🚀
#        if: ${{ steps.build_status.outcome == 'success' }}  # Only deploy when success
#        uses: JamesIves/github-pages-deploy-action@4.1.4
#        with:
#          branch: gh-pages
#          folder: docs/.vuepress/dist
#          token: ${{ secrets.PA_TOKEN }}
#          repository-name: ${{ secrets.PRIVATE_REPO_DOCS_BRANCH }}
#          silent: true
#
#      - name: 📝 Reserved job 📝
#        run: echo "Reserved"