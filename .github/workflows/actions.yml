name: 同步小説網頁

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

jobs:
  sync-esjzone:
    name: 同步 ESJZone
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repo branch 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: ${{ secrets.PRIVATE_REPO_BRANCH }}
          token: ${{ secrets.PA_TOKEN }}

      - name: ✅ Use PyPy3 ✅
        uses: actions/setup-python@v2
        with:
          python-version: 'pypy-3.7'

      - name: 💾 Cache Python requirements 💾
        id: cache
        uses: actions/cache@v2
        with:
          key: venv-new-cache-${{ hashFiles('**/requirements.txt') }}
          path: venv
          restore-keys: venv-new-cache-

      - name: 📥 Install dependencies 📥
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          python -m venv venv
          venv/bin/pip install -q -r requirements.txt

      - name: 🔄 Sync ESJZone 🔄
        run: venv/bin/python main.py

      - name: ✅ Commit changes ✅
        run: |
          git config --local user.email "25792361+sam01101@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs &> /dev/null
          git commit -m "Update novel database" -a &> /dev/null

      - name: 📤 Push commit changes 📤
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PA_TOKEN }}
          repository: ${{ secrets.PRIVATE_REPO }}
          branch: novels
          force: true

      - name: 📤 Push commit changes (compile branch) 📤
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PA_TOKEN }}
          repository: ${{ secrets.PRIVATE_REPO }}
          branch: actions-compile
          force: true

#      - name: 📦 Compress novel directory 📦
#        run: tar -czf novels.gz docs
#
#      - name: 📤 Upload novel gzip 📤
#        uses: actions/upload-artifact@v2
#        with:
#          if-no-files-found: error
#          name: novel-gzip
#          path: novels.gz
#          retention-days: 1

  build-client:
    name: 構建 client
    runs-on: macos-latest
    needs: sync-esjzone

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: novels
          token: ${{ secrets.PA_TOKEN }}

#      - name: 📥 Download novel gzip 📥
#        uses: actions/download-artifact@v2
#        with:
#          name: novel-gzip
#          path: docs
#
#      - name: 📂 Unzip novels 📂
#        run: tar -xzf docs/novels.gz

      - name: ✅ Use Node.js ✅
        id: client_cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: 📁  Get yarn cache directory path 📁
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 💾 Cahce yarn 💾
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📥 Install yarn dependencies 📥
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --silent

      - name: 🗂 Install yarn dependencies offline 🗂
        if: ${{ steps.yarn-cache.outputs.cache-hit == 'true' }}
        run: yarn install --offline --silent

      - name: 🛠 Patch files 🛠
        run: |
          chmod +x docs/.vuepress/scripts/patch.sh
          docs/.vuepress/scripts/patch.sh

      - name: ⚙ Build ⚙
        run: yarn docs:build_client

      - name: ✅ Commit changes ✅
        run: |
          git config --local user.email "25792361+sam01101@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs &> /dev/null
          git commit -m "Update dist client" -a &> /dev/null

      - name: 📤 Push commit changes 📤
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PA_TOKEN }}
          repository: ${{ secrets.PRIVATE_REPO }}
          branch: actions-client
          force: true

#      - name: 📦 Compress dist directory 📦
#        run: tar -czf clint-dist.gz docs/.vuepress/dist
#
#      - name: 📤 Upload dist gzip 📤
#        uses: actions/upload-artifact@v2
#        with:
#          if-no-files-found: error
#          name: client-gzip
#          path: clint-dist.gz
#          retention-days: 1

  build-server:
    name: 構建 server
    runs-on: macos-latest
    needs: sync-esjzone

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: novels
          token: ${{ secrets.PA_TOKEN }}

#      - name: 📥 Download novel gzip 📥
#        uses: actions/download-artifact@v2
#        with:
#          name: novel-gzip
#          path: docs
#
#      - name: 📂 Unzip novels 📂
#        run: tar -xzf docs/novels.gz

      - name: ✅ Use Node.js ✅
        id: server_cache
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: 📁  Get yarn cache directory path 📁
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 💾 Cahce yarn 💾
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📥 Install yarn dependencies 📥
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --silent

      - name: 🗂 Install yarn dependencies offline 🗂
        if: ${{ steps.yarn-cache.outputs.cache-hit == 'true' }}
        run: yarn install --offline --silent

      - name: 🛠 Patch files 🛠
        run: |
          chmod +x docs/.vuepress/scripts/patch.sh
          docs/.vuepress/scripts/patch.sh

      - name: ⚙ Build ⚙
        run: yarn docs:build_server

#      - name: 📦 Compress dist directory 📦
#        run: tar -czf server-dist.gz docs/.vuepress/dist
#
#      - name: 📤 Upload dist gzip 📤
#        uses: actions/upload-artifact@v2
#        with:
#          if-no-files-found: error
#          name: server-gzip
#          path: server-dist.gz
#          retention-days: 1

      - name: ✅ Commit changes ✅
        run: |
          git config --local user.email "25792361+sam01101@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs &> /dev/null
          git commit -m "Update dist client" -a &> /dev/null

      - name: 📤 Push commit changes 📤
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PA_TOKEN }}
          repository: ${{ secrets.PRIVATE_REPO }}
          branch: actions-server
          force: true

  merge-branches:
    name: 合并Repo
    runs-on: ubuntu-latest
    needs: [ build-client, build-server ]

    steps:
      - name: ⏩ Merge client branch ⏩
        uses: esjzone/merge-branch@master
        with:
          type: now
          repository: ${{ secrets.PRIVATE_REPO }}
          from_branch: actions-client
          target_branch: actions-compile
          github_token: ${{ secrets.PA_TOKEN }}

      - name: ⏩ Merge server branch ⏩
        uses: esjzone/merge-branch@master
        with:
          type: now
          repository: ${{ secrets.PRIVATE_REPO }}
          from_branch: actions-server
          target_branch: actions-compile
          github_token: ${{ secrets.PA_TOKEN }}

  render-and-deploy:
    name: 轉換頁面並部署
    runs-on: macos-latest
    needs: [ build-client, build-server, merge-branches ]

    steps:
      - name: 📥 Checkout Actions 📥
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          ref: actions-compile
          token: ${{ secrets.PA_TOKEN }}

      - name: ✅ Use Node.js ✅
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: 📁  Get yarn cache directory path 📁
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 💾 Cahce yarn 💾
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📥 Install yarn dependencies 📥
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --silent

      - name: 🗂 Install yarn dependencies offline 🗂
        if: ${{ steps.yarn-cache.outputs.cache-hit == 'true' }}
        run: yarn install --offline --silent

#      - name: 📥 Download server dist gzip 📥
#        uses: actions/download-artifact@v2
#        with:
#          name: server-gzip
#          path: docs/.vuepress/dist
#
#      - name: 📥 Download client dist gzip 📥
#        uses: actions/download-artifact@v2
#        with:
#          name: client-gzip
#          path: docs/.vuepress/dist
#
#      - name: 📥 Download novel gzip 📥
#        uses: actions/download-artifact@v2
#        with:
#          name: novel-gzip
#          path: docs
#
#      - name: 📂 Unzip files 📂
#        run: |
#          tar -xzf docs/novels.gz
#          tar -xzf docs/.vuepress/dist/clint-dist.gz
#          tar -xzf docs/.vuepress/dist/server-dist.gz
#          rm docs/novels.gz docs/.vuepress/dist/clint-dist.gz docs/.vuepress/dist/server-dist.gz

      - name: 🛠 Patch files 🛠
        run: |
          chmod +x docs/.vuepress/scripts/patch.sh
          docs/.vuepress/scripts/patch.sh

      - name: ⚙ Server Side Render ⚙
        run: yarn docs:render_pages

      # Push downloaded files to production
      - name: 🚀 Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs/.vuepress/dist
          token: ${{ secrets.PA_TOKEN }}
          repository-name: ${{ secrets.PRIVATE_REPO_DOCS_BRANCH }}
          silent: true
